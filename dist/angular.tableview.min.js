/*!
 AngularJS TableView v1.1.1 (2016-09-08)
 (c) 2016 Max Chuhryaev <w3core@gmail.com> https://github.com/w3core/AngularJS-TableView
 License: MIT
*/
!function(root,factory){"undefined"!=typeof module&&module.exports?(factory("undefined"==typeof angular?require("angular"):angular),module.exports="tableview"):"function"==typeof define&&define.amd?define(["angular"],factory):factory(root.angular)}(this,function(angular){var module=angular.module("tableview",[])
return module.provider("$tableView",function(){var that=this
this.theme=null,this.$get=function(){return that}}).directive("tableviewAutofocus",function($timeout){return{restrict:"A",link:function($scope,$element,$attributes){if($scope.$eval($attributes.autoFocus)!==!1){var element=$element[0]
$timeout(function(){$scope.$emit("focus",element),element.focus()})}}}}).directive("tableview",function($compile,$http,$templateCache,$tableView){function getModuleURL(){var js=document.querySelector("script[src*='"+MODULE_NAME+"']")
return js?js.src.replace(/[^\/]*$/,""):void 0}var MODULE_NAME="angular.tableview",MODULE_URL=getModuleURL(),MODULE_TPL=MODULE_URL+MODULE_NAME+".html"
return{restrict:"A",scope:{tableview:"=",tableviewTheme:"="},templateUrl:function($element,$attr){return $attr.tableviewTemplateUrl||$tableView.templateUrl||MODULE_TPL},compile:function($element,$attr){return function($scope,$element,$attr){function updateOptions(){$scope.tableview.selection=$scope.tableview.selection||[],$scope.tableview.request=$scope.tableview.request||{},$scope.tableview.request.page=$scope.tableview.request.page||1,$scope.tableview.request.limit=$scope.tableview.request.limit||$scope.tableview.limits[0],$scope.tableview.request.order=$scope.tableview.request.order||[],$scope.tableview.request.like=$scope.tableview.request.like||{},$scope.theme=$scope.tableviewTheme||$scope.tableview.theme||$scope.$provider.theme||"",$element.attr("theme",$scope.theme)
var on="addClass",off="removeClass"
$element[/mobile|android|ip[ao]d|iphone/i.test(navigator.userAgent)?on:off]("-mobile-"),$element[$scope.tableview.scrollable?on:off]("scrollable")}$scope.$provider=$tableView,$scope.$scope=$scope.$parent,$scope.Math=Math,$scope.tableview.rows=[],$scope.tableview.amount=0,$scope.tableview.pages=1,$scope.theme="",$scope.tableview.limits=$scope.tableview.limits||[10,25,50,100],$scope.exec=function(){updateOptions()
for(var i in $scope.tableview.columns)if($scope.tableview.columns[i].sortable){var v=$scope.getSort($scope.tableview.columns[i].field)
$scope.tableview.columns[i].sorting=v&&v.value?v.value:void 0}else delete $scope.tableview.columns[i].sorting
$scope.tableview.provider($scope.tableview.request,function(response){$scope.tableview.rows=response.rows,$scope.tableview.amount=response.amount,$scope.tableview.pages=Math.ceil(response.amount/(response.limit||1)),$scope.tableview.request.page=response.page,$scope.tableview.request.limit=response.limit
var $node=$element[0],$scroller=$node.querySelector(".holder.scroller")
$scroller&&$scroller.parentNode==$node&&($scroller.scrollTop=0)})},$scope.tableview.exec=$scope.exec,$scope.getColumnConfigByField=function(field){var columns=$scope.tableview.columns
for(var i in columns)if(columns[i].field==field)return{index:1*i,config:columns[i]}},$scope.getSort=function(field){var column=$scope.getColumnConfigByField(field)
if(column&&column.config.sortable){var r=$scope.tableview.request.order
for(var i in r)if(r[i]&&r[i].field&&r[i].field==field)return{index:1*i,value:r[i].sorting}
return!1}},$scope.switchSort=function(field){var column=$scope.getColumnConfigByField(field)
if(column&&column.config.sortable){var v={field:field},sorting=$scope.getSort(field)
sorting===!1?(v.sorting="DESC",$scope.tableview.multisorting?$scope.tableview.request.order.push(v):$scope.tableview.request.order=[v]):sorting&&"DESC"==sorting.value?(v.sorting="ASC",$scope.tableview.multisorting?$scope.tableview.request.order[sorting.index]=v:$scope.tableview.request.order=[v]):sorting&&"ASC"==sorting.value&&($scope.tableview.multisorting?$scope.tableview.request.order.splice(sorting.index,1):$scope.tableview.request.order=[]),$scope.exec()}},$scope.like=function($index){var field=$scope.tableview.columns[$index].field
field&&$scope.tableview.columns[$index].filterable&&("string"!=typeof $scope.tableview.request.like[field]||$scope.tableview.request.like[field].trim()||delete $scope.tableview.request.like[field],$scope.tableview.request.page=1,$scope.exec())},$scope.validate=function($index,$row,$mode){var column=$scope.tableview.columns[$index],valid=function(){return{message:"",status:!0}}
if(!column.editable||"object"!=typeof column.editable)return $mode.validation=valid(),!0
"function"!=typeof column.editable.validate&&(column.editable.validate=valid)
var result=column.editable.validate(column,$row,column.field,$mode.value)
return"boolean"==typeof result&&(result=result?valid():{message:"",status:!1}),result=result&&"object"==typeof result?result:{},result.status=!!result.status,result.message="string"==typeof result.message?result.message:"",$mode.validation=result,result.status},$scope.edition=function($index,$row,$mode){var column=$scope.tableview.columns[$index],validation=$scope.validate($index,$row,$mode),changed=!($mode.value===$row[column.field])
return column.editable&&validation?$row[column.field]=$mode.value:$mode.value=$row[column.field],validation&&changed&&column.editable&&"object"==typeof column.editable&&"function"==typeof column.editable.change&&column.editable.change(column,$row,column.field,$row[column.field]),$mode.edition=!1,$mode.validation={message:"",status:!0},!0},$scope.next=function(){$scope.tableview.request.page++,$scope.exec()},$scope.prev=function(){$scope.tableview.request.page--,$scope.exec()},$scope.limit=function(){$scope.tableview.request.page=1,$scope.tableview.request.limit*=1,$scope.exec()},$scope.getRowSelectionIndex=function($row){if("string"==typeof $scope.tableview.selectableBy&&$scope.tableview.selectableBy.trim().length&&void 0!==$row[$scope.tableview.selectableBy]){for(var key=$scope.tableview.selectableBy,val=$row[$scope.tableview.selectableBy],i=0;i<$scope.tableview.selection.length;i++)if($scope.tableview.selection[i][key]==val)return 1*i
return-1}},$scope.switchRowSelection=function($row,sign){var index=$scope.getRowSelectionIndex($row)
"number"==typeof index&&("boolean"==typeof sign?0>index&&sign?$scope.tableview.selection.push(angular.copy($row)):index>=0&&!sign&&$scope.tableview.selection.splice(index,1):0>index?$scope.tableview.selection.push(angular.copy($row)):$scope.tableview.selection.splice(index,1))},$scope.isRowSelected=function($row){var i=$scope.getRowSelectionIndex($row)
return!!("number"==typeof i&&i>=0)},$scope.isRowsSelected=function(){var $rows=$scope.tableview.rows.slice(0,$scope.tableview.request.limit)
if(!$rows.length||!$scope.tableview.selection.length)return!1
for(var i=0;i<$rows.length;i++)if(!$scope.isRowSelected($rows[i]))return!1
return!0},$scope.onSelectPageRows=function($event){for(var sign=$event.target.checked,$rows=$scope.tableview.rows.slice(0,$scope.tableview.request.limit),i=0;i<$rows.length;i++)$scope.switchRowSelection($rows[i],sign)},$scope.themeTemplateName=function(name){if($scope.theme&&name){var name=["tableview",$scope.theme,name].join(".")
return"string"==typeof $templateCache.get(name)?name:void 0}},$scope.defaultTemplateName=function(name){return["tableview",name].join(".")},$scope.templateName=function(name,$index){var $0=void 0!==$index&&$scope.tableview.columns[$index]&&$scope.tableview.columns[$index].template?$scope.tableview.columns[$index].template:{},$1=$scope.tableview.template&&"object"==typeof $scope.tableview.template?$scope.tableview.template:{},$2=$scope.$provider.template&&"object"==typeof $scope.$provider.template?$scope.$provider.template:{},tpl=$0[name]||$1[name]||$2[name]||$scope.themeTemplateName(name)||$scope.defaultTemplateName(name)
return"string"==typeof $templateCache.get(tpl)?tpl:void 0},$scope.exec()}}}}),module})
